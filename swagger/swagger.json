{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Url http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/arl/": {
            "get": {
                "tags": [
                    "arl"
                ],
                "description": "get Arl",
                "operationId": "ArlController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Arl"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "arl"
                ],
                "description": "create Arl",
                "operationId": "ArlController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Arl content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Arl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Arl"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arl/{id}": {
            "get": {
                "tags": [
                    "arl"
                ],
                "description": "get Arl by id",
                "operationId": "ArlController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Arl"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "arl"
                ],
                "description": "update the Arl",
                "operationId": "ArlController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Arl content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Arl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Arl"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "arl"
                ],
                "description": "delete the Arl",
                "operationId": "ArlController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/banco/": {
            "get": {
                "tags": [
                    "banco"
                ],
                "description": "get Banco",
                "operationId": "BancoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Banco"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "banco"
                ],
                "description": "create Banco",
                "operationId": "BancoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Banco content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Banco"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Banco"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/banco/{id}": {
            "get": {
                "tags": [
                    "banco"
                ],
                "description": "get Banco by id",
                "operationId": "BancoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Banco"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "banco"
                ],
                "description": "update the Banco",
                "operationId": "BancoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Banco content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Banco"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Banco"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "banco"
                ],
                "description": "delete the Banco",
                "operationId": "BancoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/caja_compensacion/": {
            "get": {
                "tags": [
                    "caja_compensacion"
                ],
                "description": "get CajaCompensacion",
                "operationId": "CajaCompensacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CajaCompensacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "caja_compensacion"
                ],
                "description": "create CajaCompensacion",
                "operationId": "CajaCompensacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CajaCompensacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CajaCompensacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CajaCompensacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/caja_compensacion/{id}": {
            "get": {
                "tags": [
                    "caja_compensacion"
                ],
                "description": "get CajaCompensacion by id",
                "operationId": "CajaCompensacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CajaCompensacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "caja_compensacion"
                ],
                "description": "update the CajaCompensacion",
                "operationId": "CajaCompensacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CajaCompensacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CajaCompensacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CajaCompensacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "caja_compensacion"
                ],
                "description": "delete the CajaCompensacion",
                "operationId": "CajaCompensacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/componente_resolucion/": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComponenteResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "create ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ComponenteResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/componente_resolucion/{id}": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion by id",
                "operationId": "ComponenteResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "update the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "delete the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato/": {
            "get": {
                "tags": [
                    "contrato"
                ],
                "description": "get Contrato",
                "operationId": "ContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Contrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato"
                ],
                "description": "create Contrato",
                "operationId": "ContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Contrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato/{id}": {
            "get": {
                "tags": [
                    "contrato"
                ],
                "description": "get Contrato by id",
                "operationId": "ContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Contrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato"
                ],
                "description": "update the Contrato",
                "operationId": "ContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Contrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato"
                ],
                "description": "delete the Contrato",
                "operationId": "ContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_estado/": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado",
                "operationId": "ContratoEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "create ContratoEstado",
                "operationId": "ContratoEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_estado/{id}": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado by id",
                "operationId": "ContratoEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "update the ContratoEstado",
                "operationId": "ContratoEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "delete the ContratoEstado",
                "operationId": "ContratoEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_general/": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral",
                "operationId": "ContratoGeneralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoGeneral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_general"
                ],
                "description": "create ContratoGeneral",
                "operationId": "ContratoGeneralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoGeneral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_general/{id}": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral by id",
                "operationId": "ContratoGeneralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_general"
                ],
                "description": "update the ContratoGeneral",
                "operationId": "ContratoGeneralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_general"
                ],
                "description": "delete the ContratoGeneral",
                "operationId": "ContratoGeneralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dedicacion/": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion",
                "operationId": "DedicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Dedicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dedicacion"
                ],
                "description": "create Dedicacion",
                "operationId": "DedicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Dedicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dedicacion/{id}": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion by id",
                "operationId": "DedicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dedicacion"
                ],
                "description": "update the Dedicacion",
                "operationId": "DedicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dedicacion"
                ],
                "description": "delete the Dedicacion",
                "operationId": "DedicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/departamento/": {
            "get": {
                "tags": [
                    "departamento"
                ],
                "description": "get Departamento",
                "operationId": "DepartamentoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Departamento"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "departamento"
                ],
                "description": "create Departamento",
                "operationId": "DepartamentoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Departamento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Departamento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Departamento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/departamento/{id}": {
            "get": {
                "tags": [
                    "departamento"
                ],
                "description": "get Departamento by id",
                "operationId": "DepartamentoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Departamento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "departamento"
                ],
                "description": "update the Departamento",
                "operationId": "DepartamentoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Departamento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Departamento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Departamento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "departamento"
                ],
                "description": "delete the Departamento",
                "operationId": "DepartamentoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/eps/": {
            "get": {
                "tags": [
                    "eps"
                ],
                "description": "get Eps",
                "operationId": "EpsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Eps"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "eps"
                ],
                "description": "create Eps",
                "operationId": "EpsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Eps content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Eps"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Eps"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/eps/{id}": {
            "get": {
                "tags": [
                    "eps"
                ],
                "description": "get Eps by id",
                "operationId": "EpsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Eps"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "eps"
                ],
                "description": "update the Eps",
                "operationId": "EpsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Eps content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Eps"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Eps"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "eps"
                ],
                "description": "delete the Eps",
                "operationId": "EpsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/escalafon/": {
            "get": {
                "tags": [
                    "escalafon"
                ],
                "description": "get Escalafon",
                "operationId": "EscalafonController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Escalafon"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "escalafon"
                ],
                "description": "create Escalafon",
                "operationId": "EscalafonController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Escalafon content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Escalafon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Escalafon"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/escalafon/{id}": {
            "get": {
                "tags": [
                    "escalafon"
                ],
                "description": "get Escalafon by id",
                "operationId": "EscalafonController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Escalafon"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "escalafon"
                ],
                "description": "update the Escalafon",
                "operationId": "EscalafonController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Escalafon content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Escalafon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Escalafon"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "escalafon"
                ],
                "description": "delete the Escalafon",
                "operationId": "EscalafonController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/escalafon_persona/": {
            "get": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "get EscalafonPersona",
                "operationId": "EscalafonPersonaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/EscalafonPersona"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "create EscalafonPersona",
                "operationId": "EscalafonPersonaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EscalafonPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EscalafonPersona"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EscalafonPersona"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/escalafon_persona/{id}": {
            "get": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "get EscalafonPersona by id",
                "operationId": "EscalafonPersonaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/EscalafonPersona"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "update the EscalafonPersona",
                "operationId": "EscalafonPersonaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EscalafonPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EscalafonPersona"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/EscalafonPersona"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "delete the EscalafonPersona",
                "operationId": "EscalafonPersonaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fondo_pension/": {
            "get": {
                "tags": [
                    "fondo_pension"
                ],
                "description": "get FondoPension",
                "operationId": "FondoPensionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FondoPension"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "fondo_pension"
                ],
                "description": "create FondoPension",
                "operationId": "FondoPensionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FondoPension content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FondoPension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FondoPension"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fondo_pension/{id}": {
            "get": {
                "tags": [
                    "fondo_pension"
                ],
                "description": "get FondoPension by id",
                "operationId": "FondoPensionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FondoPension"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fondo_pension"
                ],
                "description": "update the FondoPension",
                "operationId": "FondoPensionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FondoPension content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FondoPension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FondoPension"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fondo_pension"
                ],
                "description": "delete the FondoPension",
                "operationId": "FondoPensionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_persona_natural/": {
            "get": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "get InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InformacionPersonaNatural"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "create InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaNatural content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InformacionPersonaNatural"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionPersonaNatural"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_persona_natural/{id}": {
            "get": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "get InformacionPersonaNatural by id",
                "operationId": "InformacionPersonaNaturalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InformacionPersonaNatural"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "update the InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaNatural content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InformacionPersonaNatural"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InformacionPersonaNatural"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "delete the InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion",
                "operationId": "LugarEjecucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LugarEjecucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "create LugarEjecucion",
                "operationId": "LugarEjecucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.LugarEjecucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/{id}": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion by id",
                "operationId": "LugarEjecucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "update the LugarEjecucion",
                "operationId": "LugarEjecucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "delete the LugarEjecucion",
                "operationId": "LugarEjecucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/pais/": {
            "get": {
                "tags": [
                    "pais"
                ],
                "description": "get Pais",
                "operationId": "PaisController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Pais"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "pais"
                ],
                "description": "create Pais",
                "operationId": "PaisController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pais content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pais"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Pais"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/pais/{id}": {
            "get": {
                "tags": [
                    "pais"
                ],
                "description": "get Pais by id",
                "operationId": "PaisController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Pais"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "pais"
                ],
                "description": "update the Pais",
                "operationId": "PaisController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pais content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pais"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Pais"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pais"
                ],
                "description": "delete the Pais",
                "operationId": "PaisController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_entidad/": {
            "get": {
                "tags": [
                    "parametro_entidad"
                ],
                "description": "get ParametroEntidad",
                "operationId": "ParametroEntidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEntidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_entidad"
                ],
                "description": "create ParametroEntidad",
                "operationId": "ParametroEntidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEntidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParametroEntidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroEntidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_entidad/{id}": {
            "get": {
                "tags": [
                    "parametro_entidad"
                ],
                "description": "get ParametroEntidad by id",
                "operationId": "ParametroEntidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEntidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_entidad"
                ],
                "description": "update the ParametroEntidad",
                "operationId": "ParametroEntidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEntidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParametroEntidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEntidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_entidad"
                ],
                "description": "delete the ParametroEntidad",
                "operationId": "ParametroEntidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_estandar/": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar",
                "operationId": "ParametroEstandarController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEstandar"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "create ParametroEstandar",
                "operationId": "ParametroEstandarController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroEstandar"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_estandar/{id}": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar by id",
                "operationId": "ParametroEstandarController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "update the ParametroEstandar",
                "operationId": "ParametroEstandarController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "delete the ParametroEstandar",
                "operationId": "ParametroEstandarController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametros/": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros",
                "operationId": "ParametrosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Parametros"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametros"
                ],
                "description": "create Parametros",
                "operationId": "ParametrosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Parametros"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Parametros"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametros/{id}": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros by id",
                "operationId": "ParametrosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametros"
                ],
                "description": "update the Parametros",
                "operationId": "ParametrosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Parametros"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametros"
                ],
                "description": "delete the Parametros",
                "operationId": "ParametrosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/punto_salarial/": {
            "get": {
                "tags": [
                    "punto_salarial"
                ],
                "description": "get PuntoSalarial",
                "operationId": "PuntoSalarialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PuntoSalarial"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "punto_salarial"
                ],
                "description": "create PuntoSalarial",
                "operationId": "PuntoSalarialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PuntoSalarial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PuntoSalarial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PuntoSalarial"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/punto_salarial/{id}": {
            "get": {
                "tags": [
                    "punto_salarial"
                ],
                "description": "get PuntoSalarial by id",
                "operationId": "PuntoSalarialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PuntoSalarial"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "punto_salarial"
                ],
                "description": "update the PuntoSalarial",
                "operationId": "PuntoSalarialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PuntoSalarial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PuntoSalarial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PuntoSalarial"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "punto_salarial"
                ],
                "description": "delete the PuntoSalarial",
                "operationId": "PuntoSalarialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion/": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion",
                "operationId": "ResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Resolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion"
                ],
                "description": "create Resolucion",
                "operationId": "ResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Resolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Resolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/{id}": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion by id",
                "operationId": "ResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion"
                ],
                "description": "update the Resolucion",
                "operationId": "ResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Resolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion"
                ],
                "description": "delete the Resolucion",
                "operationId": "ResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion_docente/": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ResolucionVinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "create ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ResolucionVinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente by id",
                "operationId": "ResolucionVinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "update the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "delete the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/snies_nucleo_basico/": {
            "get": {
                "tags": [
                    "snies_nucleo_basico"
                ],
                "description": "get SniesNucleoBasico",
                "operationId": "SniesNucleoBasicoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SniesNucleoBasico"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "snies_nucleo_basico"
                ],
                "description": "create SniesNucleoBasico",
                "operationId": "SniesNucleoBasicoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SniesNucleoBasico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SniesNucleoBasico"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SniesNucleoBasico"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/snies_nucleo_basico/{id}": {
            "get": {
                "tags": [
                    "snies_nucleo_basico"
                ],
                "description": "get SniesNucleoBasico by id",
                "operationId": "SniesNucleoBasicoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SniesNucleoBasico"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "snies_nucleo_basico"
                ],
                "description": "update the SniesNucleoBasico",
                "operationId": "SniesNucleoBasicoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SniesNucleoBasico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SniesNucleoBasico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SniesNucleoBasico"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "snies_nucleo_basico"
                ],
                "description": "delete the SniesNucleoBasico",
                "operationId": "SniesNucleoBasicoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato",
                "operationId": "SupervisorContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SupervisorContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "create SupervisorContrato",
                "operationId": "SupervisorContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SupervisorContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/{id}": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato by id",
                "operationId": "SupervisorContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "update the SupervisorContrato",
                "operationId": "SupervisorContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "delete the SupervisorContrato",
                "operationId": "SupervisorContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_contrato/": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato",
                "operationId": "TipoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "create TipoContrato",
                "operationId": "TipoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_contrato/{id}": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato by id",
                "operationId": "TipoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "update the TipoContrato",
                "operationId": "TipoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "delete the TipoContrato",
                "operationId": "TipoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion",
                "operationId": "TipoResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "create TipoResolucion",
                "operationId": "TipoResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/{id}": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion by id",
                "operationId": "TipoResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "update the TipoResolucion",
                "operationId": "TipoResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "delete the TipoResolucion",
                "operationId": "TipoResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/unidad_ejecutora/": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UnidadEjecutora"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "create UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.UnidadEjecutora"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/unidad_ejecutora/{id}": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora by id",
                "operationId": "UnidadEjecutoraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UnidadEjecutora"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "update the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UnidadEjecutora"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "delete the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente",
                "operationId": "VinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "create VinculacionDocente",
                "operationId": "VinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.VinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente by id",
                "operationId": "VinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "update the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "delete the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "Arl": {
            "title": "Arl",
            "type": "object",
            "properties": {
                "Direccion": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "ExtencionFax": {
                    "type": "number",
                    "format": "double"
                },
                "ExtencionTelefono": {
                    "type": "number",
                    "format": "double"
                },
                "Fax": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdUbicacion": {
                    "type": "number",
                    "format": "double"
                },
                "Lugar": {
                    "type": "number",
                    "format": "double"
                },
                "Nombre": {
                    "type": "string"
                },
                "NombreRepresentanteLegal": {
                    "type": "string"
                },
                "Telefono": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "Banco": {
            "title": "Banco",
            "type": "object",
            "properties": {
                "CodigoAch": {
                    "type": "number",
                    "format": "double"
                },
                "CodigoSuperintendencia": {
                    "type": "number",
                    "format": "double"
                },
                "DenominacionBanco": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EstadoActivo": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nit": {
                    "type": "string"
                },
                "NombreBanco": {
                    "type": "string"
                }
            }
        },
        "CajaCompensacion": {
            "title": "CajaCompensacion",
            "type": "object",
            "properties": {
                "Direccion": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "ExtencionFax": {
                    "type": "number",
                    "format": "double"
                },
                "ExtencionTelefono": {
                    "type": "number",
                    "format": "double"
                },
                "Fax": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdUbicacion": {
                    "type": "number",
                    "format": "double"
                },
                "Nombre": {
                    "type": "string"
                },
                "NombreRepresentanteLegal": {
                    "type": "string"
                },
                "Telefono": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ComponenteResolucion": {
            "title": "ComponenteResolucion",
            "type": "object",
            "properties": {
                "ComponentePadre": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ResolucionId": {
                    "$ref": "#/definitions/Resolucion"
                },
                "Texto": {
                    "type": "string"
                },
                "TipoComponente": {
                    "type": "string"
                }
            }
        },
        "Contrato": {
            "title": "Contrato",
            "type": "object",
            "properties": {
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroConvenio": {
                    "type": "integer",
                    "format": "int64"
                },
                "Perfil": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaConvenio": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContratoEstado": {
            "title": "ContratoEstado",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContratoGeneral": {
            "title": "ContratoGeneral",
            "type": "object",
            "properties": {
                "Actividades": {
                    "type": "string"
                },
                "ClaseContratista": {
                    "type": "integer",
                    "format": "int64"
                },
                "ClausulaRegistroPresupuestal": {
                    "type": "boolean"
                },
                "Condiciones": {
                    "type": "string"
                },
                "Contratista": {
                    "type": "number",
                    "format": "double"
                },
                "Convenio": {
                    "type": "string"
                },
                "DependenciaSolicitante": {
                    "type": "string"
                },
                "DescripcionFormaPago": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FormaPago": {
                    "$ref": "#/definitions/Parametros"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Justificacion": {
                    "type": "string"
                },
                "LugarEjecucion": {
                    "$ref": "#/definitions/LugarEjecucion"
                },
                "ModalidadSeleccion": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroConstancia": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSolicitudNecesidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "ObjetoContrato": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "OrdenadorGasto": {
                    "type": "string"
                },
                "OrigenPresupueso": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrigenRecursos": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlazoEjecucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Procedimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegimenContratacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "ResgistroPresupuestal": {
                    "type": "integer",
                    "format": "int64"
                },
                "SedeSolicitante": {
                    "type": "string"
                },
                "Supervisor": {
                    "$ref": "#/definitions/SupervisorContrato"
                },
                "TemaGastoInversion": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCompromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "$ref": "#/definitions/TipoContrato"
                },
                "TipoControl": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoGasto": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoMoneda": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipologiaContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecucion": {
                    "$ref": "#/definitions/Parametros"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/UnidadEjecutora"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                },
                "ValorContratoMe": {
                    "type": "number",
                    "format": "double"
                },
                "ValorTasaCambio": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Dedicacion": {
            "title": "Dedicacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreDedicacion": {
                    "type": "string"
                }
            }
        },
        "Departamento": {
            "title": "Departamento",
            "type": "object",
            "properties": {
                "AbPais": {
                    "type": "string"
                },
                "Abreviatura": {
                    "type": "string"
                },
                "Area": {
                    "type": "integer",
                    "format": "int64"
                },
                "CapitalDepartamento": {
                    "type": "string"
                },
                "DepartamentoCapPais": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdPais": {
                    "$ref": "#/definitions/Pais"
                },
                "Nombre": {
                    "type": "string"
                },
                "Poblacion": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Eps": {
            "title": "Eps",
            "type": "object",
            "properties": {
                "Direccion": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "ExtFax": {
                    "type": "number",
                    "format": "double"
                },
                "ExtTelefono": {
                    "type": "number",
                    "format": "double"
                },
                "Fax": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdUbicacion": {
                    "type": "number",
                    "format": "double"
                },
                "NomRepresentante": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                },
                "Telefono": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "Escalafon": {
            "title": "Escalafon",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEscalafon": {
                    "type": "string"
                }
            }
        },
        "EscalafonPersona": {
            "title": "EscalafonPersona",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEscalafon": {
                    "$ref": "#/definitions/Escalafon"
                },
                "IdPersonaNatural": {
                    "$ref": "#/definitions/InformacionPersonaNatural"
                },
                "Observacion": {
                    "type": "string"
                }
            }
        },
        "FondoPension": {
            "title": "FondoPension",
            "type": "object",
            "properties": {
                "Direccion": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "ExtFax": {
                    "type": "number",
                    "format": "double"
                },
                "ExtTelefono": {
                    "type": "number",
                    "format": "double"
                },
                "Fax": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdUbicacion": {
                    "type": "number",
                    "format": "double"
                },
                "NomRepresentante": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                },
                "Telefono": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "InformacionPersonaNatural": {
            "title": "InformacionPersonaNatural",
            "type": "object",
            "properties": {
                "CabezaFamilia": {
                    "type": "boolean"
                },
                "Cargo": {
                    "type": "string"
                },
                "ComunidadLgbt": {
                    "type": "boolean"
                },
                "CuentaAhorroAfc": {
                    "type": "boolean"
                },
                "DeclaranteRenta": {
                    "type": "boolean"
                },
                "DependienteConyuge": {
                    "type": "boolean"
                },
                "DependienteHijoMas23Discapacitado": {
                    "type": "boolean"
                },
                "DependienteHijoMenorEdad": {
                    "type": "boolean"
                },
                "DependienteHijoMenos23Estudiando": {
                    "type": "boolean"
                },
                "DependientePadreOHermano": {
                    "type": "boolean"
                },
                "DigitoVerificacion": {
                    "type": "number",
                    "format": "double"
                },
                "Discapacitado": {
                    "type": "boolean"
                },
                "Especialidad": {
                    "type": "string"
                },
                "EstadoCivil": {
                    "type": "string"
                },
                "FechaExpedicionDocumento": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Genero": {
                    "type": "string"
                },
                "GrupoEtnico": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdArl": {
                    "$ref": "#/definitions/ParametroEntidad"
                },
                "IdCajaCompensacion": {
                    "$ref": "#/definitions/ParametroEntidad"
                },
                "IdCiudadExpedicionDocumento": {
                    "type": "number",
                    "format": "double"
                },
                "IdEntidadBancariaAfc": {
                    "$ref": "#/definitions/Banco"
                },
                "IdEps": {
                    "$ref": "#/definitions/ParametroEntidad"
                },
                "IdFondoPension": {
                    "$ref": "#/definitions/ParametroEntidad"
                },
                "IdNitArl": {
                    "$ref": "#/definitions/Arl"
                },
                "IdNitCajaCompensacion": {
                    "$ref": "#/definitions/CajaCompensacion"
                },
                "IdNitEps": {
                    "$ref": "#/definitions/Eps"
                },
                "IdNitFondoPension": {
                    "$ref": "#/definitions/FondoPension"
                },
                "IdNucleoBasico": {
                    "$ref": "#/definitions/SniesNucleoBasico"
                },
                "IdPaisNacimiento": {
                    "$ref": "#/definitions/Pais"
                },
                "InteresViviendaAfc": {
                    "type": "number",
                    "format": "double"
                },
                "MedicinaPrepagada": {
                    "type": "boolean"
                },
                "MontoCapitalAutorizado": {
                    "type": "number",
                    "format": "double"
                },
                "NumCuentaBancariaAfc": {
                    "type": "string"
                },
                "NumeroPersonasACargo": {
                    "type": "number",
                    "format": "double"
                },
                "Perfil": {
                    "$ref": "#/definitions/ParametroEstandar"
                },
                "PersonasACargo": {
                    "type": "boolean"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "Profesion": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                },
                "TipoDiscapacidad": {
                    "type": "string"
                },
                "TipoDocumento": {
                    "$ref": "#/definitions/ParametroEstandar"
                },
                "ValorUvtPrepagada": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "LugarEjecucion": {
            "title": "LugarEjecucion",
            "type": "object",
            "properties": {
                "Ciudad": {
                    "type": "number",
                    "format": "double"
                },
                "Dependencia": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Sede": {
                    "type": "string"
                }
            }
        },
        "Pais": {
            "title": "Pais",
            "type": "object",
            "properties": {
                "Abreviatura": {
                    "type": "string"
                },
                "AreaPais": {
                    "type": "integer",
                    "format": "int64"
                },
                "CapitalPais": {
                    "type": "string"
                },
                "CodigoPais": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombrePais": {
                    "type": "string"
                },
                "PoblacionPais": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProvinciaPais": {
                    "type": "string"
                }
            }
        },
        "ParametroEntidad": {
            "title": "ParametroEntidad",
            "type": "object",
            "properties": {
                "FechaCreacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaModificacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEstado": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTipoEntidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nit": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "ParametroEstandar": {
            "title": "ParametroEstandar",
            "type": "object",
            "properties": {
                "ClaseParametro": {
                    "type": "string"
                },
                "DescripcionParametro": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorParametro": {
                    "type": "string"
                }
            }
        },
        "Parametros": {
            "title": "Parametros",
            "type": "object",
            "properties": {
                "CodigoContraloria": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RelParametro": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PuntoSalarial": {
            "title": "PuntoSalarial",
            "type": "object",
            "properties": {
                "Decreto": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorPunto": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Resolucion": {
            "title": "Resolucion",
            "type": "object",
            "properties": {
                "ConsideracionResolucion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaResolucion": {
                    "$ref": "#/definitions/int16"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTipoResolucion": {
                    "$ref": "#/definitions/TipoResolucion"
                },
                "NumeroResolucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "PreambuloResolucion": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ResolucionVinculacionDocente": {
            "title": "ResolucionVinculacionDocente",
            "type": "object",
            "properties": {
                "Dedicacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdFacultad": {
                    "type": "integer",
                    "format": "int64"
                },
                "NivelAcademico": {
                    "type": "string"
                }
            }
        },
        "SniesNucleoBasico": {
            "title": "SniesNucleoBasico",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdArea": {
                    "type": "number",
                    "format": "double"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "SupervisorContrato": {
            "title": "SupervisorContrato",
            "type": "object",
            "properties": {
                "Cargo": {
                    "type": "string"
                },
                "DependenciaSupervisor": {
                    "type": "string"
                },
                "DigitoVerificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "SedeSupervisor": {
                    "type": "string"
                },
                "Tipo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TipoContrato": {
            "title": "TipoContrato",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdGrupoTipoContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "type": "string"
                }
            }
        },
        "TipoResolucion": {
            "title": "TipoResolucion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreTipoResolucion": {
                    "type": "string"
                }
            }
        },
        "UnidadEjecutora": {
            "title": "UnidadEjecutora",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Entidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "VinculacionDocente": {
            "title": "VinculacionDocente",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDedicacion": {
                    "$ref": "#/definitions/Dedicacion"
                },
                "IdPersona": {
                    "$ref": "#/definitions/InformacionPersonaNatural"
                },
                "IdProyectoCurricular": {
                    "$ref": "#/definitions/int16"
                },
                "IdPuntoSalarial": {
                    "$ref": "#/definitions/PuntoSalarial"
                },
                "IdResolucion": {
                    "$ref": "#/definitions/Resolucion"
                },
                "IdSalarioMinimo": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroHorasSemanales": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSemanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "int16": {
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "informacion_persona_natural",
            "description": "InformacionPersonaNaturalController oprations for InformacionPersonaNatural\n"
        },
        {
            "name": "dedicacion",
            "description": "DedicacionController oprations for Dedicacion\n"
        },
        {
            "name": "arl",
            "description": "ArlController oprations for Arl\n"
        },
        {
            "name": "tipo_resolucion",
            "description": "TipoResolucionController oprations for TipoResolucion\n"
        },
        {
            "name": "escalafon_persona",
            "description": "EscalafonPersonaController oprations for EscalafonPersona\n"
        },
        {
            "name": "fondo_pension",
            "description": "FondoPensionController oprations for FondoPension\n"
        },
        {
            "name": "parametro_entidad",
            "description": "ParametroEntidadController oprations for ParametroEntidad\n"
        },
        {
            "name": "banco",
            "description": "BancoController oprations for Banco\n"
        },
        {
            "name": "parametro_estandar",
            "description": "ParametroEstandarController oprations for ParametroEstandar\n"
        },
        {
            "name": "componente_resolucion",
            "description": "ComponenteResolucionController oprations for ComponenteResolucion\n"
        },
        {
            "name": "pais",
            "description": "PaisController oprations for Pais\n"
        },
        {
            "name": "departamento",
            "description": "DepartamentoController oprations for Departamento\n"
        },
        {
            "name": "resolucion_vinculacion_docente",
            "description": "ResolucionVinculacionDocenteController oprations for ResolucionVinculacionDocente\n"
        },
        {
            "name": "vinculacion_docente",
            "description": "VinculacionDocenteController oprations for VinculacionDocente\n"
        },
        {
            "name": "caja_compensacion",
            "description": "CajaCompensacionController oprations for CajaCompensacion\n"
        },
        {
            "name": "punto_salarial",
            "description": "PuntoSalarialController oprations for PuntoSalarial\n"
        },
        {
            "name": "escalafon",
            "description": "EscalafonController oprations for Escalafon\n"
        },
        {
            "name": "resolucion",
            "description": "ResolucionController oprations for Resolucion\n"
        },
        {
            "name": "lugar_ejecucion",
            "description": "LugarEjecucionController oprations for LugarEjecucion\n"
        },
        {
            "name": "eps",
            "description": "EpsController oprations for Eps\n"
        },
        {
            "name": "contrato",
            "description": "ContratoController oprations for Contrato\n"
        },
        {
            "name": "contrato_estado",
            "description": "ContratoEstadoController oprations for ContratoEstado\n"
        },
        {
            "name": "contrato_general",
            "description": "ContratoGeneralController oprations for ContratoGeneral\n"
        },
        {
            "name": "unidad_ejecutora",
            "description": "UnidadEjecutoraController oprations for UnidadEjecutora\n"
        },
        {
            "name": "supervisor_contrato",
            "description": "SupervisorContratoController oprations for SupervisorContrato\n"
        },
        {
            "name": "tipo_contrato",
            "description": "TipoContratoController oprations for TipoContrato\n"
        },
        {
            "name": "parametros",
            "description": "ParametrosController oprations for Parametros\n"
        },
        {
            "name": "snies_nucleo_basico",
            "description": "SniesNucleoBasicoController oprations for SniesNucleoBasico\n"
        }
    ]
}